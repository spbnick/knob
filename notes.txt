So, what if the relation reference has less roles than the one in the
database?

What if it has a subset of roles compared to multiple relations in the database?

Which one is it referencing then?

A relation with more roles inherits and overrides the attributes of the
relation with less roles, but only at render time and at access time

In which order does a relation inherit attributes from relations with the same
amount but different roles missing? Undefined. Don't do that.

Or should we just make a reference to a relation with less roles update
existing relations with more roles? And create relations with non existing set
of roles? Or perhaps we should always just create relations with non-existing
set of roles, at least for the start?

That sounds better.

---
FORMAT:

Taking inspiration from graphviz, but purely-data oriented, and with support
for relations (hypergraphs).

"<name>"
    - entity
<name>
    - entity

entity -[]-> entity
    - implicit relation with source and target

---
So, maybe if we have two items, like e.a.b, we say that a is type and b is
name. And if we have only one item, like e.b, we say that b is name and there
is no type, because you can have an entity without a type, but you cannot have
an entity without a name?

What about relations? There's just two cases: type or no type, so it's always
type.

But we could only figure that out when we actually use those, so perhaps we
better avoid that kind of complexity.

---
So, let's change to this way:

A call is for setting attributes/roles, but to access a named entity we can
just use attribute access or indexing. We don't have to spell out a call.

We also don't have to do a call for relations.

Just referencing is enough to create an entity/relation.

---
So, the problem with relations is that we want to be able to assign their
roles gradually, and not have an indication of when we're done.
Additionally, a relation doesn't have any roles at first.

Then, we want to be able to keep an incomplete relation, having a type, some
attributes, and maybe a few roles as a template and instantiate it for
connection to multiple other entities.

Can we just always pass around a relation template and create a relation each
time its roles are added or changed? And then remove all relations which are
subsets of the one being created from the graph? Because e.g. in Graphviz it's
not possible to remove roles, only to add?
